( Selection or (not Filter and Selection1) ) and Keywords

left: `Ok((" and Keywords",
ParserOutput { result:
Condition {
  metadata: Metadata {
    parser_type: PARENS,
    parser_result: "( Selection or (not Filter and Selection1) )"
  },
  is_negated: None,
  operator: None,
  search_identifier: None,
  nested_detections: Some(Detection {
    operator: Some(OR),
    conditions: Some([
        Condition {
            metadata: Metadata {
                parser_type: SEARCH_IDENTIFIER,
                parser_result: "Selection"
            },
            is_negated: None,
            operator: None,
            search_identifier: Some("Selection"),
            nested_detections: None
        },
        Condition {
            metadata: Metadata {
                parser_type: OR,
                parser_result: "or (not Filter and Selection1)"
            },
            is_negated: Some(false),
            operator: Some(OR),
            search_identifier: None,
            nested_detections: Some(Detection {
                operator: Some(AND),
                conditions: Some([
                    Condition {
                        metadata: Metadata {
                            parser_type: NOT,
                            parser_result: "not Filter"
                        },
                        is_negated: Some(true),
                        operator: None,
                        search_identifier: Some("Filter"),
                        nested_detections: None
                    },
                    Condition {
                        metadata: Metadata {
                            parser_type: AND,
                            parser_result: "and Selection1"
                        },
                        is_negated: Some(false),
                        operator: Some(AND),
                        search_identifier: Some("Selection1"),
                        nested_detections: None }]) }) }]) }) } }))`,
